(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,d=u["".concat(i,".").concat(m)]||u[m]||b[m]||o;return n?r.a.createElement(d,s(s({ref:t},l),{},{components:n})):r.a.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),o=(n(0),n(101)),i={title:"Built-in Plugins"},s={unversionedId:"built-in-plugins",id:"built-in-plugins",isDocsHomePage:!1,title:"Built-in Plugins",description:"Here you will find information about built-in plugins.",source:"@site/docs/built-in-plugins.mdx",slug:"/built-in-plugins",permalink:"/docs/built-in-plugins",editUrl:"https://github.com/wilkerlucio/pathom3-docs/edit/master/docs/built-in-plugins.mdx",version:"current",sidebar:"docs",previous:{title:"Plugins",permalink:"/docs/plugins"},next:{title:"Async",permalink:"/docs/async"}},c=[{value:"Attribute errors",id:"attribute-errors",children:[]},{value:"Resolve mutations params",id:"resolve-mutations-params",children:[]}],l={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Here you will find information about built-in plugins."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-clojure"}),"[com.wsscode.pathom3.connect.built-in.plugins :as pbip]\n")),Object(o.b)("h2",{id:"attribute-errors"},"Attribute errors"),Object(o.b)("p",null,"Pathom 3 keeps errors inside the meta-data in responses."),Object(o.b)("p",null,"One way to expose these errors in the data is using the ",Object(o.b)("inlineCode",{parentName:"p"},"attribute-error-plugin"),"."),Object(o.b)("p",null,"Example setup:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-clojure"}),'(ns com.wsscode.pathom3.docs.built-in-plugins\n  (:require [com.wsscode.pathom3.connect.built-in.plugins :as pbip]\n            [com.wsscode.pathom3.connect.built-in.resolvers :as pbir]\n            [com.wsscode.pathom3.connect.indexes :as pci]\n            [com.wsscode.pathom3.interface.eql :as p.eql]\n            [com.wsscode.pathom3.plugin :as p.plugin]))\n\n(def env\n  (-> (pci/register (pbir/single-attr-resolver :x :y inc))\n      (p.plugin/register (pbip/attribute-errors-plugin))))\n\n(p.eql/process env\n  {:x "foo"}\n  [:y])\n=>\n{:com.wsscode.pathom3.connect.runner/attribute-errors\n {:y #error{:cause "class java.lang.String cannot be cast to class java.lang.Number (java.lang.String and java.lang.Number are in module java.base of loader \'bootstrap\')",\n            :via   [{:type    java.lang.ClassCastException,\n                     :message "class java.lang.String cannot be cast to class java.lang.Number (java.lang.String and java.lang.Number are in module java.base of loader \'bootstrap\')",\n                     :at      [clojure.lang.Numbers\n                               inc\n                               "Numbers.java"\n                               137]}],\n            :trace ...}}}\n')),Object(o.b)("p",null,"This plugin uses the same error finding described in the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/debugging#error-for-some-attribute"}),"debugging page"),"."),Object(o.b)("h2",{id:"resolve-mutations-params"},"Resolve mutations params"),Object(o.b)("p",null,"On Pathom, when you call a mutation, the params flow without any alteration. The default\nbehavior is meant to give the fastest path possible to invoke mutations."),Object(o.b)("p",null,'That said, it\'s common also to want the params to be "resolved", just like Pathom does\nwith inputs on resolvers.'),Object(o.b)("p",null,"To make that happen, you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"mutation-resolve-params")," built-in plugin. When\nyou add this plugin, Pathom will use the ",Object(o.b)("inlineCode",{parentName:"p"},"::pco/params")," as a query and will run that\non the user params, and then deliver the resolved data to the mutation."),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-clojure"}),"(pco/defmutation foo [{:keys [b]}]\n  {:res b})\n\n(p.eql/process\n  (-> (pci/register\n        [(pbir/single-attr-resolver :a :b inc)\n         foo])\n      (p.plugin/register pbip/mutation-resolve-params))\n  ['(foo {:a 1})])\n; => {foo {:res 2}}\n")),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"When using ",Object(o.b)("inlineCode",{parentName:"p"},"pco/defmutation"),", ",Object(o.b)("inlineCode",{parentName:"p"},"::pco/params")," is inferred from the argument destructuring."))))}p.isMDXComponent=!0}}]);